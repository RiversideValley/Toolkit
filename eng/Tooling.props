<Project>
	<PropertyGroup>
		<!-- Check if the project name contains specific keywords -->
		<IsUwpProject Condition=" '$(MSBuildProjectName)' != '' and $(MSBuildProjectName.Contains('Uwp')) ">true</IsUwpProject>
		<IsWinUIProject Condition=" '$(MSBuildProjectName)' != '' and $(MSBuildProjectName.Contains('WinUI')) ">true</IsWinUIProject>
		<IsNetCoreProject Condition=" '$(MSBuildProjectName)' != '' and $(MSBuildProjectName.Contains('NETCore')) ">true</IsNetCoreProject>
	</PropertyGroup>

	<!-- AOT -->
	<PropertyGroup Condition="'$(IsAotCompatible)' == 'true'">
		<!-- Literally always publish AOT -->
		<PublishAot>true</PublishAot>
		<PublishTrimmed Condition="'$(Configuration)' == 'Debug'">False</PublishTrimmed>
		<PublishTrimmed Condition="'$(Configuration)' != 'Debug'">True</PublishTrimmed>
	</PropertyGroup>

	<!-- Dependencies -->
	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.2" />
		<ProjectReference Include="$(SourceDirectory)\extensions\Riverside.Extensions.PInvoke\Riverside.Extensions.PInvoke.csproj" Condition="'$(Configuration)' == 'Debug' and '$(MSBuildProjectName)' != 'Riverside.Extensions.PInvoke'" />
		<PackageReference Include="Riverside.Extensions.PInvoke" Version="$(Version)" Condition="'$(Configuration)' == 'Release'  and '$(MSBuildProjectName)' != 'Riverside.Extensions.PInvoke'"/>
	</ItemGroup>

	<!-- .NET Core specific properties -->
	<PropertyGroup Condition="'$(IsNetCoreProject)' == 'true'">
		<DefineConstants>$(DefineConstants);NETCore</DefineConstants>
		
		<!-- .NET Core project -->
		<TargetFrameworks>net8.0;net9.0;netstandard2.1;netstandard2.0</TargetFrameworks>
		<Nullable>enable</Nullable>
	</PropertyGroup>
	<!-- WinUI specific properties -->
	<PropertyGroup Condition="'$(IsWinUIProject)' == 'true'">
		<DefineConstants>$(DefineConstants);UAP;WinUI;HAS_WINUI</DefineConstants>

		<!-- WinUI project -->
		<TargetFrameworks>net8.0-windows10.0.19041.0;net9.0-windows10.0.26100.0</TargetFrameworks>
		<TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
		<RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
		<UseWinUI>true</UseWinUI>
		<IsAotCompatible>true</IsAotCompatible>
	</PropertyGroup>
	<ItemGroup Condition="'$(IsWinUIProject)' == 'true'">
		<PackageReference Include="Microsoft.Web.WebView2" Version="1.0.2957.106" />
		<PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.26100.1742" />
		<PackageReference Include="Microsoft.WindowsAppSDK" Version="1.6.241114003" />
		<PackageReference Include="WinUIEx" Version="2.5.1" />
		<PackageReference Include="Microsoft.Graphics.Win2D" Version="1.3.1" />
		<PackageReference Include="DependencyPropertyGenerator" Version="1.4.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>
	<!-- UWP specific properties -->
	<PropertyGroup Condition="'$(IsUwpProject)' == 'true'">
		<DefineConstants>$(DefineConstants);UAP;UWP;HAS_UWP</DefineConstants>

		<!-- UWP project -->
		<TargetFramework>net9.0-windows10.0.26100.0</TargetFramework>
		<TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
		<UseUwp>true</UseUwp>
		<UseUwpTools>true</UseUwpTools>
		<DisableRuntimeMarshalling>true</DisableRuntimeMarshalling>
		<IsAotCompatible>true</IsAotCompatible>
	</PropertyGroup>
	<ItemGroup Condition="'$(IsUwpProject)' == 'true' ">
		<PackageReference Include="Microsoft.Web.WebView2" Version="1.0.2957.106" />
		<PackageReference Include="Microsoft.UI.Xaml" Version="2.8.6" />
		<PackageReference Include="Win2D.uwp" Version="1.28.1" />
		<PackageReference Include="DependencyPropertyGenerator" Version="1.4.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>
</Project>
